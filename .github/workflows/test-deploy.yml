name: Tests

on:
  push:
    branches:
      - staging
      - deploy
jobs:
  test_and_build:
    runs-on: ubuntu-latest
    name: Test and Build ${{ matrix.node-version }} ${{ matrix.db-types }}
    strategy:
      matrix:
        node-version: [10.x, 12.x]
        db-types: ['mysql', 'mariadb']
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_USER: logger
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: logger
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      mariadb:
        image: mariadb:10.3
        env:
          MYSQL_USER: logger
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: logger
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        
    steps:
    - uses: actions/checkout@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Create Database
      run: |
        sudo apt-get install -y mysql-client
        mysql -h 127.0.0.1 -ulogger -ppassword logger --port ${{ job.services.mysql.ports[3306] }} < database/migration.sql
        mysql -h 127.0.0.1 -ulogger -ppassword logger --port ${{ job.services.mysql.ports[3306] }} -e "show tables;"
    - name: Use Node.js ${{ matrix.node-version }}    
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: |
        npm install
        npm run lint
        npm run test
        npm run build
        aws cloudformation package --template template.yml --s3-bucket ${{ secrets.S3_BUCKET }} --output-template dist/template-export.yml
      env: 
        DB_HOST: 127.0.0.1
        DB_USER: logger
        DB_PASSWORD: password
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
        DB_DATABASE: logger
        DB_TABLE: logs

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.node-version }}
        path: dist/
        if-no-files-found: error
  deploy:
    runs-on: ubuntu-latest
    needs: test_and_build
    if: github.ref == 'refs/heads/deploy'
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Download Artifact
      uses: actions/download-artifact@v2
      id: download
      with:
        name: ${{ matrix.node-version }}
        path: ~/download/
    - name: Display structure of downloaded files
      working-directory: ${{steps.download.outputs.download-path}}
      run: |
        ls -R
        aws cloudformation deploy --capabilities CAPABILITY_IAM --template-file 12.x/template-export.yml --stack-name seslogger      

